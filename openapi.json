{
    "openapi": "3.0.0",
    "info": {
        "title": "Simply.com API",
        "description": "Documentation for this API can be found on https://www.simply.com/docs/api/",
        "termsOfService": "https://www.simply.com/terms-of-service/",
        "version": "2.1.1"
    },
    "servers": [
        {
            "url": "https://api.simply.com/2/"
        }
    ],
    "paths": {
        "/ddns/": {
            "post": {
                "tags": [
                    "dns"
                ],
                "description": "DDNS helper",
                "operationId": "ddnsHelper",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "The domain you wish to update. Overrides data from hostname parameter.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "example.com"
                    },
                    {
                        "name": "hostname",
                        "in": "query",
                        "description": "The full hostname you wish to create/update. Domain and record will be inferred from this",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "home.example.com"
                    },
                    {
                        "name": "record",
                        "in": "query",
                        "description": "The name of the generated DNS record you wish to create/update on the domain. Affects data from hostname parameter.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "home"
                    },
                    {
                        "name": "myip",
                        "in": "query",
                        "description": "The IP address to be set. Will automatically use the client IP (REMOTE_ADDR) if this parameter is not provided. We recommend leaving this parameter blank",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "127.0.0.1"
                    },
                    {
                        "name": "ttl",
                        "in": "query",
                        "description": "The TTL of the generated DNS record",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 360
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Description of action taken"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dyndns/": {
            "get": {
                "tags": [
                    "dns"
                ],
                "description": "Dyndns lookalike endpoint, directly emulates dyndns.",
                "operationId": "dyndns",
                "parameters": [
                    {
                        "name": "hostname",
                        "in": "query",
                        "description": "The full hostname you wish to create/update. Domain and record will be inferred from this",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "fqdn": {
                                "summary": "Full FQDN",
                                "value": "home.example.com"
                            },
                            "label": {
                                "summary": "Just label, domain parameter must then be provided",
                                "value": "home"
                            }
                        }
                    },
                    {
                        "name": "myip",
                        "in": "query",
                        "description": "The IP address to be set. Will automatically use the client IP (REMOTE_ADDR) if this parameter is not provided.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "ipv4": {
                                "summary": "IPv4 address",
                                "value": "127.0.0.1"
                            },
                            "ipv6": {
                                "summary": "IPv6 address",
                                "value": "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
                            }
                        }
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "Domain to change records on, must be used if domain cannot be inferred from hostname or if incorrectly inferred. Overrides data from hostname parameter.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "example.com"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DynDNS protocol responses",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "good": {
                                        "summary": "IP updated",
                                        "value": "good 1.2.3.4"
                                    },
                                    "nochg": {
                                        "summary": "IP unchanged",
                                        "value": "nochg 1.2.3.4"
                                    },
                                    "badauth": {
                                        "summary": "Authentication failed",
                                        "value": "badauth"
                                    },
                                    "nohost": {
                                        "summary": "Hostname not found",
                                        "value": "nohost"
                                    },
                                    "notfqdn": {
                                        "summary": "Invalid hostname",
                                        "value": "notfqdn"
                                    },
                                    "badagent": {
                                        "summary": "Unsupported client",
                                        "value": "badagent"
                                    },
                                    "abuse": {
                                        "summary": "Too many updates",
                                        "value": "abuse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/my/products/{object}/dns/records": {
            "get": {
                "tags": [
                    "DNS"
                ],
                "summary": "Retrieve DNS records for a specific object",
                "operationId": "getDnsRecords",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with DNS records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "records": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "record_id": {
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "example.com"
                                                    },
                                                    "ttl": {
                                                        "type": "integer",
                                                        "example": 3600
                                                    },
                                                    "data": {
                                                        "type": "string",
                                                        "example": "192.168.1.1"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "A"
                                                    },
                                                    "priority": {
                                                        "type": "integer",
                                                        "example": 10,
                                                        "nullable": true
                                                    },
                                                    "comment": {
                                                        "type": "string",
                                                        "example": "Primary record",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid or unknown product reference",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unknown or invalid product reference"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dns"
                ],
                "summary": "Add new DNS record to a product DNS zone",
                "operationId": "addDnsRecord",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/object"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "A"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "example.com"
                                    },
                                    "data": {
                                        "type": "string",
                                        "example": "1.2.3.4"
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "ttl": {
                                        "type": "integer",
                                        "example": 3600
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "JSON object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "record": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the added record",
                                                        "type": "integer",
                                                        "example": 123
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/my/products/{object}/dns/records/{record_id}": {
            "put": {
                "tags": [
                    "dns"
                ],
                "summary": "Updates a DNS record in a product DNS zone",
                "operationId": "updateDnsRecord",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/object"
                    },
                    {
                        "$ref": "#/components/parameters/record_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "A"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "example.com"
                                    },
                                    "data": {
                                        "type": "string",
                                        "example": "1.2.3.4"
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "ttl": {
                                        "type": "integer",
                                        "example": 3600
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "JSON object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dns"
                ],
                "summary": "Removes DNS record from a product DNS zone",
                "operationId": "deleteDnsRecord",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/object"
                    },
                    {
                        "$ref": "#/components/parameters/record_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/my/products/{object}/dns/reload": {
            "post": {
                "tags": [
                    "dns"
                ],
                "summary": "Force-reload a DNS zone - Usually not necessary",
                "operationId": "reloadDnsZone",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/my/products/{object}/dns": {
            "get": {
                "tags": [
                    "dns"
                ],
                "description": "Retrieve meta information about a DNS zone for a product",
                "operationId": "getDnsZone",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/my/serverstatus/messages/": {
            "get": {
                "tags": [
                    "ServerStatus"
                ],
                "summary": "Retrieve a list of current and past serverstatus messages",
                "operationId": "getServerStatusMessages",
                "responses": {
                    "200": {
                        "description": "Successful response with past and present messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "text": {
                                                        "type": "string",
                                                        "example": "Example of server status message, in markdown"
                                                    },
                                                    "date_start": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "date_end": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "planned"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/my/invoices": {
            "get": {
                "tags": [
                    "billing"
                ],
                "description": "Retrieve list of all invoices",
                "operationId": "getInvoices",
                "responses": {
                    "200": {
                        "description": "JSON object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "invoices": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "invoiceno": {
                                                        "type": "string"
                                                    },
                                                    "reference": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "subject": {
                                                        "type": "string"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "currency": {
                                                        "type": "string"
                                                    },
                                                    "transactionno": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/my/products": {
            "get": {
                "tags": [
                    "products"
                ],
                "description": "Retrieve list of all products on a given account",
                "operationId": "getProductList",
                "responses": {
                    "200": {
                        "description": "JSON object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "object": {
                                                        "description": "This is the object that should be used in further API calls",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "autorenew": {
                                                        "type": "boolean"
                                                    },
                                                    "cancelled": {
                                                        "type": "boolean"
                                                    },
                                                    "domain": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "name_idn": {
                                                                "type": "string"
                                                            },
                                                            "managed": {
                                                                "description": "Is the domain managed by Simply.com",
                                                                "type": "boolean"
                                                            },
                                                            "date_renewdate": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "product": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "date_created": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "date_expire": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "usernames": {
                                                        "properties": {
                                                            "ftp": {
                                                                "type": "string"
                                                            },
                                                            "ssh": {
                                                                "type": "string"
                                                            },
                                                            "mysql": {
                                                                "type": "string"
                                                            },
                                                            "mssql": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "servers": {
                                                        "properties": {
                                                            "webserver": {
                                                                "properties": {
                                                                    "hostname": {
                                                                        "type": "string"
                                                                    },
                                                                    "ip": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/openapi.json": {
            "get": {
                "tags": [
                    "documentation"
                ],
                "summary": "OpenAPI JSON file that describes the API",
                "operationId": "aa199985c8f25b391406c7aa6d0582e3",
                "responses": {
                    "200": {
                        "description": "JSON object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/my/order/dnsservice": {
            "post": {
                "tags": [
                    "order"
                ],
                "description": "Order a domain, requires working credit card on account if payment is needed.",
                "operationId": "3db09c5bcfacbbba537a8872997b010e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "domain",
                                    "domainaction"
                                ],
                                "properties": {
                                    "domain": {
                                        "description": "Fully qualified domain name (i.e example.com)",
                                        "type": "string",
                                        "example": "example.com"
                                    },
                                    "domainaction": {
                                        "description": "Action to perform on the domain",
                                        "type": "string",
                                        "enum": [
                                            "register",
                                            "transfer",
                                            "transferonly",
                                            "none"
                                        ],
                                        "example": "register",
                                        "x-enumDescriptions": {
                                            "register": "Register a new domain name",
                                            "transfer": "Transfer a domain and update nameservers",
                                            "transferonly": "Transfer a domain without nameserver changes",
                                            "none": "No action performed on the domain"
                                        }
                                    },
                                    "coupon": {
                                        "type": "string",
                                        "example": "FOOBAR"
                                    },
                                    "authid": {
                                        "description": "Authid for transfer, if applicable",
                                        "type": "string"
                                    },
                                    "autorenew": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "JSON object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/my/domaincheck/{domain}": {
            "get": {
                "description": "Check for domain availability",
                "operationId": "domaincheck",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "The domain you wish to check the status on.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "example.com"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "parameters": {
            "record_id": {
                "name": "record_id",
                "in": "path",
                "description": "The id of a DNS record in a DNS zone.",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "object": {
                "name": "object",
                "in": "path",
                "description": "The product handle/UUID, as found in the /my/products/ endpoint.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "example.com"
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "description": "Username is the name of your Simply.com account (S123456), password is the API-key for this account.",
                "scheme": "basic"
            }
        }
    },
    "tags": [
        {
            "name": "dns",
            "description": "dns"
        },
        {
            "name": "DNS",
            "description": "DNS"
        },
        {
            "name": "ServerStatus",
            "description": "ServerStatus"
        },
        {
            "name": "billing",
            "description": "billing"
        },
        {
            "name": "products",
            "description": "products"
        },
        {
            "name": "documentation",
            "description": "documentation"
        },
        {
            "name": "order",
            "description": "order"
        }
    ]
}